% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/wald.R
\name{walddf}
\alias{walddf}
\title{Wald function producing a data frame for graphing}
\usage{
walddf(fit, Llist = "", clevel = 0.95, data = NULL, debug = FALSE,
  full = FALSE, fixed = FALSE, invert = FALSE, method = "svd",
  df = NULL, se = 2, digits = 3, sep = "")
}
\arguments{
\item{fit}{a model for which a \code{getFix} method exists.}

\item{Llist}{a hypothesis matrix or a pattern to be matched or a list of
these}

\item{clevel}{level for confidence intervals}

\item{data}{data frame used as 'data' attribute fot list elements returned only if
the corresonding element of \code{Llist} has a NULL data attribute}

\item{debug}{(default FALSE) produce verbose information}

\item{full}{if TRUE, the hypothesis matrix is the model matrix for
 \code{fit} such that the estimated coefficients are the predicted values for
the fixed portion of the model. This is designed to allow the calculation of
standard errors for models for which the \code{predict} method does not
provide them.}

\item{fixed}{if \code{Llist} is a character to be used a regular expression,
if \code{fixed} is TRUE \code{Llist} is interpreted literally, i.e.
characters that have a special meaning in regular expressions are
interpreted literally.}

\item{invert}{if \code{Llist} is a character to be used a regular
expression, \code{invert == TRUE} causes the matches to be inverted so that
coefficients that do not match will be selected.}

\item{method}{'svd' (current default) or 'qr' is the method used to find the
full rank version of the hypothesis matrix.  'svd' has correctly identified
the rank of a large hypothesis matrix where 'qr' has failed.}

\item{se}{a vector with the multiples of standard error used to generate lower and upper limits. 'names(se)'
is appended to 'L' and 'U' to label the variables.}

\item{which}{selects elements of 'obj' to turn to a data.frame.}
}
\value{
A data frame with estimated coefficient, standard error, and, optionally, upper and lower limits and
        the variables included the 'data' element of 'obj' if present.
        If \code{length(which) > 1}, the returned object is a list of data frames.
}
\description{
A version of the wald function that produces a data frame directly, analogously to \code{as.data.frame(wald(...))}
}
\examples{
data(hs)
library( nlme )

###
### Using walddf to create and plot a data frame with predicted values
###
\dontrun{
  fit <- lme(mathach ~ (ses+I(ses^2)) * Sex * Sector, hs, random = ~ 1|school)
  summary(fit)
  pred <- expand.grid( ses = seq(-2,2,.1), Sex = levels(hs$Sex), Sector = levels(hs$Sector))
  head(pred)
  w <- walddf(fit, getX(fit,data=pred)) # attaches data to wald.object so it can included in data frame
  head(w)
  library(latticeExtra)
  xyplot(coef ~ ses | Sector, w, groups = Sex,
     auto.key = T, type = 'l',
     fit = w$coef,
     upper = with(w,coef+2*se),
     lower = with(w,coef-2*se),
     subscript = T) +
     glayer( gpanel.fit(...))

wald( fit, 'Sex')  # sig. overall effect of Sex
wald( fit, ':Sex') # but no evidence of interaction with ses
wald( fit, '\\\\^2') # nor of curvature
}
}

